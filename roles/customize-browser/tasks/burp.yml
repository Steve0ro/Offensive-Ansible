- name: "Check if BurpSuiteCA.der exists"
  stat:
    path: /usr/local/share/ca-certificates/BurpSuiteCA.der
  register: burp_cert

- name: "Copying Burp Script"
  copy:
    src: files/getburpcert.sh
    dest: /tmp/getburpcert.sh
    mode: 0744
  when: not burp_cert.stat.exists

- name: "Executing bash script to Download CA Certificate"
  shell: /tmp/getburpcert.sh
  register: burp_run
  changed_when: "'Launched' in burp_run.stdout or burp_run.rc == 0"
  failed_when: "not (burp_run.rc == 0 or 'cert saved to /tmp/cacert.der' in burp_run.stdout)"
  when: not burp_cert.stat.exists

- name: "Copying CA Certificate to /usr/local/share/ca-certificates"
  copy:
    src: /tmp/cacert.der
    dest: /usr/local/share/ca-certificates/BurpSuiteCA.der
    owner: root
    group: root
    mode: '0644'
    remote_src: yes
  become: true
  when: not burp_cert.stat.exists


# Determine the non-root user who should receive the Burp config
- name: "Determine deploy user"
  set_fact:
    deploy_user: "{{ lookup('env','USER') }}"

- name: "Ensure user's .BurpSuite dir exists"
  file:
    path: "/home/{{ deploy_user }}/.BurpSuite"
    state: directory
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: '0755'
  become: true

- name: "Copy BurpSuite Community Config (to user home)"
  template:
    src: "templates/UserConfigCommunity.json.j2"
    dest: "/home/{{ deploy_user }}/.BurpSuite/UserConfigCommunity.json"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: '0644'
  # run as unprivileged user so file permissions/uid are correct
  become: false
